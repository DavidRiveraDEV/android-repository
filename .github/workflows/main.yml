name: Android CI

on:
  push:
    branches: [ staging, master ]
  pull_request:
    branches: [ staging, master ]

jobs:
  #  lint:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout the code
  #        uses: actions/checkout@v2
  #
  #      - name: Run lint
  #        run: ./gradlew lintDebug
  #
  #      - name: Upload html test report
  #        uses: actions/upload-artifact@v2
  #        with:
  #          name: lint.html
  #          path: app/build/reports/lint-results-debug.html

  unit_tests:
    #    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Unit tests
        run: ./gradlew test

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/

  android_tests:
    #    needs: [ unit_tests ]
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedAndroidTest

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/

#  static_code_analysis:
#    needs: [ unit_tests, android_tests ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: '11'
#
#      - name: SonarCloud Scan
#        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}